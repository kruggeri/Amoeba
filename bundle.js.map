{"version":3,"sources":["webpack:///webpack/bootstrap c31a815498a4f2fda1d1","webpack:///./amoeba.js","webpack:///./amoebas_refactored/amoebas.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;AC/DA;;;;;;;AAOA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,2I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,iCAAiC;AAC3E,kFAAkF;AAClF;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAO;AACP;AACA;AACA;AACA,oBAAoB;AACpB,oBAAoB;AACpB,8BAA8B;;AAE9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;;AAGA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,CAAC;;;;;;;;ACvND;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c31a815498a4f2fda1d1","\nimport Amoeba from './amoebas_refactored/amoebas.js';\n\n\n\n\n\n\n(function(){\n\nfunction init(){\n\n     var canvas = document.getElementsByTagName('canvas')[0];\n     canvas.width = 1000;\n     canvas.height = 700;\n     var c = canvas.getContext('2d');\n     c.fillStyle = '#4B6BF6';\n     c.strokeStyle = '#4B6BF6';\n     c.fillRect(0, 0, 1000, 700);\n\n\n\t\t const targetAmoeba = new Amoeba(400, 400, 40, '#4B6BF6', 1, 1); \n\t\t const circles = [ targetAmoeba,\n\t\t \t\t\t\t\t\t\t\t \t new Amoeba(400, 200, 40, \"#37B7C6\", -1, 1),\n\t\t\t\t\t\t\t\t\t\t\t new Amoeba(400, 300, 40, \"#A644F3\", 1, -1),\n\t\t\t\t\t\t\t\t\t\t\t new Amoeba(600, 300, 40,\"#061CFF\", -1, 1),\n\t\t\t\t\t\t\t\t\t\t\t new Amoeba(700, 400, 40,\"#0686FF\", -1, -1),\n\t\t\t\t\t\t\t\t\t\t\t new Amoeba(700, 300, 40,\"#6037C6\", 1, 1),\n\t\t\t\t\t\t\t\t\t\t\t new Amoeba(500, 380, 40,\"#438FFC\", 1, -1),\n\t\t\t\t\t\t\t\t\t\t\t new Amoeba(300, 400, 40,\"#8643FC\", 1, 1),\n\n\t\t ];\n\n     const petriCenterX = 500;\n     const petriCenterY = 350;\n     const petriRadius = 250;\n     const maxSpeed = 0.40;\n     const minSpeed = 0.25;\n\n    // you have a center at (x, y). And you have a radius of r. And the points (x2, y2) on the edge of the circle are:\n    // those where r = sqrt((x - x2)^2 + (y - y2)^2)\n    // sqrt((x - x2)^2 + (y - y2)^2) the equation for distance from a point (x, y) to another point (x2, y2)\n\t\t//\n\t\t// function checkAmoebaIsOutOfRange(circleA) {\n\t\t// \tconst amoebaCenterDistanceToPetriCenter = Math.sqrt(\n\t\t// \t\tMath.pow((circleA.x - petriCenterX), 2) +\n\t\t// \t\tMath.pow((circleA.y - petriCenterY),2)\n\t\t// \t );\n\t\t//\n\t\t// \tif (amoebaCenterDistanceToPetriCenter >= (petriRadius - circleA.r) {\n\t\t// \t\tcircleA.x += circles[i].vx;\n\t\t// \t\tcircleA.y +=circles[i].vy;\n\t\t// \t}\n\t\t//\n\t\t// }\n\n\n    function checkAmoebaforCollisions(circleA) {\n\n      const amoebaCenterDistanceToPetriCenter = Math.sqrt(\n        Math.pow((circleA.x - petriCenterX), 2) +\n        Math.pow((circleA.y - petriCenterY),2)\n       );\n\n       if (amoebaCenterDistanceToPetriCenter >= (petriRadius - circleA.r)) {\n         if (!isAmovingTowardsB(circleA, {x: petriCenterX, y: petriCenterY})) {\n           circleA.vx = -(circleA.vx * Math.random() + Math.sign(circleA.vx)*0.5); // F'd\n           circleA.vy = -(circleA.vy * Math.random() + Math.sign(circleA.vy)*0.5);\n\n         }\n      }\n\n      circles.forEach( (circleB) => {\n        if (circleB === circleA) {\n          return;\n        }\n\n        const AcenterDistanceToBcenter = Math.sqrt(\n          Math.pow((circleA.x - circleB.x), 2) +\n          Math.pow((circleA.y - circleB.y),2)\n         );\n\n        if (AcenterDistanceToBcenter <= (circleA.r + circleB.r)) {\n          const oldCircleAvx = circleA.vx;\n          const oldCircleAvy = circleA.vy;\n          const speedDecay = 0.75;\n\n          // YOu only flip around if you are headed toward the other person.\n          if (isAmovingTowardsB (circleA, circleB)) {\n            // circleA.vx = -(circleA.vx * speedDecay) + (circleB.vx * speedDecay);\n            // circleA.vy = -(circleA.vy * speedDecay)+ (circleB.vy * speedDecay);\n\t\t\t\t\t\t circleA.vx = -circleA.vx * Math.random() - Math.sign(circleA.vx)*500;\n\t\t\t\t\t\t circleA.vy = -circleA.vy * Math.random() - Math.sign(circleA.vx)*500;\n          } else {\n            // circleA.vx = (circleA.vx * speedDecay) + (circleB.vx * speedDecay);\n            // circleA.vy = (circleA.vy * speedDecay)+ (circleB.vy * speedDecay);\n\t\t\t\t\t\tcircleA.vx = circleA.vx * Math.random() + Math.sign(circleA.vx)*500;\n\t\t\t\t\t\tcircleA.vy = circleA.vy * Math.random() + Math.sign(circleA.vx)*500;\n          }\n\n          if (isAmovingTowardsB (circleB, circleA)) {\n            // circleB.vx = -(circleB.vx * speedDecay) + (oldCircleAvx * speedDecay);\n            // circleB.vy = -(circleB.vy * speedDecay) + (oldCircleAvy * speedDecay);\n\t\t\t\t\t\tcircleB.vx = -circleB.vx * Math.random() - Math.sign(circleA.vx)*500;\n\t\t\t\t\t\tcircleB.vy = -circleB.vy * Math.random() - Math.sign(circleA.vx)*500;\n          } else {\n            // circleB.vx = (circleB.vx * speedDecay) + (oldCircleAvx * speedDecay);\n            // circleB.vy = (circleB.vy * speedDecay) + (oldCircleAvy * speedDecay);\n\t\t\t\t\t\tcircleB.vx = circleB.vx * Math.random() + Math.sign(circleA.vx)*500;\n\t\t\t\t\t\tcircleB.vy = circleB.vy * Math.random() + Math.sign(circleA.vx)*500;\n          }\n\n          capSpeed(circleA);\n          capSpeed(circleB);\n        }\n\n      });\n    }\n// B = (my_pos - your_pos) ||| your_pos + B = my_pos\n    function isAmovingTowardsB (amoebaA, amoebaB) {\n      // centerA = { x: 300_, y: 200}\n      // centerB = { x: 500, y: 100}\n      // centerB - centerA = { x: 200, y: -100 }\n\n      const vectorFromAtoB = {\n        x: (amoebaB.x - amoebaA.x),\n        y: (amoebaB.y - amoebaA.y)\n      };\n\n      const dotProduct = (vectorFromAtoB.x * amoebaA.vx) + (vectorFromAtoB.y * amoebaA.vy);\n      if (dotProduct > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    function currentSpeed (vx, vy) {\n      return Math.sqrt(Math.pow(vx, 2) + Math.pow(vy, 2));\n    }\n\n    function capSpeed (amoeba) {\n\n\t\t\t// if (amoeba.vx > 1) {\n\t\t\t// \tamoeba.vx = 1;\n\t\t\t// } else if (amoeba.vx < -1){\n\t\t\t// \tamoeba.vx = -1\n\t\t\t// }\n\t\t\t//\n\t\t\t// if (amoeba.vy > 1) {\n\t\t\t// \tamoeba.vy = 1;\n\t\t\t// } else if (amoeba.vy < -1){\n\t\t\t// \tamoeba.vy = -1\n\t\t\t// }\n\n\n      const timesTooFast = currentSpeed(amoeba.vx, amoeba.vy) / maxSpeed;\n      const timesTooSlow = minSpeed / currentSpeed(amoeba.vx, amoeba.vy);\n\n\n\n      if (currentSpeed(amoeba.vx, amoeba.vy) > maxSpeed) {\n        //clamp it at maxSpeed. Multiply vx and vy by some number so that the\n        // speed becomes maxSpeed.\n        //\n        // timesTooFast = currentSpeed(vx, vy) / maxSpeed\n        //\n        // Take timesTooFast and use it to divide vx and vy.\n        amoeba.vx = amoeba.vx / timesTooFast;\n        amoeba.vy = amoeba.vy / timesTooFast;\n\n\n      } else if (currentSpeed(amoeba.vx, amoeba.vy) < minSpeed) {\n        amoeba.vx = amoeba.vx + 0.50;\n        amoeba.vy = amoeba.vy + 0.50 ;\n\n      }\n    }\n\n     function draw(){\n\n         c.arc(petriCenterX, petriCenterY, petriRadius, 0, 2*Math.PI, true);\n         c.fillStyle = 'black';\n         c.strokeStyle = 'black';\n         c.fill();\n\n         for(var i=0; i <circles.length; i++){\n             c.fillStyle = circles[i].color;\n             c.beginPath();\n             c.arc(circles[i].x,circles[i].y,circles[i].r,0,2*Math.PI,false);\n             c.fill();\n\t\t\t\t\t\t//  console.log(circles[i]);\n\n             const currentCircle = circles[i];\n            // sqrt((x - x2)^2 + (y - y2)^2)\n            // Math.pow(123, 2)\n\n\n            checkAmoebaforCollisions(currentCircle);\n\t\t\t\t\t\t// checkAmoebaIsOutOfRange(currentCircle);\n\n\n\t\t\t\t\t\t\tcurrentCircle.x += currentCircle.vx;\n\t\t\t\t\t\t\tcurrentCircle.y += currentCircle.vy;\n\n         }\n\n         requestAnimationFrame(draw);\n     }\n    requestAnimationFrame(draw);\n}\n\n//invoke function init once document is fully loaded\nwindow.addEventListener('load',init,false);\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./amoeba.js\n// module id = 0\n// module chunks = 0","const DEFAULTS = {\n\tRADIUS: 40,\n\tSPEED: [1,1]\n};\n\nclass Amoeba {\n    constructor(x, y, r, color, vx, vy) {\n      this.x = x;\n      this.y = y;\n      this.r = r;\n      this.color = color;\n      this.vx = vx;\n      this.vy = vy;\n    }\n\n    draw(ctx) {\n      ctx.fillStyle = this.color;\n      ctx.arc(\n        this.pos[0], this.pos[1], this.radius, 0, 2*Math.PI, true\n      );\n      ctx.fill();\n    }\n\n    move() {\n      this.pos[0] += this.vel[0];\n      this.pos[1] += this.vel[1];\n    }\n}\n\nexport default Amoeba;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./amoebas_refactored/amoebas.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}